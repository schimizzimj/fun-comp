Marcus Schimizzi
10/9/16

	From a user's perspective, the program functions as a very elementary database that stores and manages a list of sayings. From the start, the program prompts the user to enter the name of a startup file to be used as the initial list of sayings. Then, the user is prompted with a menu of various choices. The user may select option 1 to have the program display all of the sayings. The user may select option 2 to enter a new saying. The user may select option 3 to have the program display all sayings containing that word. The user can select option 4 to save all of the sayings into a new text file. Finally, the user can pick option 5, which simply quits the program. The program will loop through until the user selects option 5. 
	From a programming perspective, the program starts by asking the user for the name of a startup file. Then, the program uses fstream to open the file, checking to make sure the file exists before continuing. If it does not exist, the program returns an error. The program then uses getline() and a WHILE loop to populate a vector with the content of the startup file. The program then uses a WHILE loop to show the user a list of possible commands. It uses a switch statement to allow the user to select one of the possible options. For the first case, the program simply uses a FOR loop in conjunction with iterators to display the strings from the vector to the screen. For the second option, the program prompts the user for a new saying. Then, it uses getline() and sayings.push_back() to append the saying to the end of the vector. For the third option, the program prompts the user to enter a word to find, and then it uses a FOR loop and an IF statement to display every string in the vector that has that word in it. For the fourth option, the program asks the user for a name for a new file to save all of the sayings to. Then, the program uses ofstream with a FOR loop to save all of the sayings into a new file. Finally, the fifth option simply sets the WHILE loop flag to false to end the program. 
	Verifying the program was not too difficult. I simply tried to test all of the options from the menu and made sure they worked as expected. After running through all of them repeatedly, I found that they worked consistently. From my tests, the program seems to work correctly. 
